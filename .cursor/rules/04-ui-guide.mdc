---
description: 
globs: 
alwaysApply: false
---
# 用户界面指南

## 主界面结构
主界面在 [main.py](mdc:main.py) 中实现，使用PyQt6框架构建。主要组件包括：

- 状态标签：显示当前连接状态
- 功能按钮区域：包含连接模拟器和开始自动申购等功能按钮
- 日志输出区域：显示操作日志和状态信息
- 菜单栏：提供配置和账号管理功能

## 对话框组件
系统包含以下主要对话框组件：

1. [ui/account_dialog.py](mdc:ui/account_dialog.py) - 账号管理对话框
   - 添加新账号
   - 编辑现有账号
   - 删除账号
   - 查看账号列表

2. [ui/settings_dialog.py](mdc:ui/settings_dialog.py) - 设置对话框
   - 配置模拟器路径
   - 设置券商APP包名
   - 应用和保存系统配置

## 事件处理
- 用户界面事件通过Qt信号和槽机制处理
- 长时间运行的任务通过 [workers/adb_worker.py](mdc:workers/adb_worker.py) 在后台线程中执行
- 后台线程使用信号向主线程发送状态更新和完成通知

## 用户交互流程

### 模拟器连接流程
1. 用户点击"连接模拟器"按钮
2. 系统调用SimulatorController检查和连接模拟器
3. 连接状态通过状态标签显示
4. 连接成功后，启用申购按钮

### 账号管理流程
1. 用户从菜单中选择"账号管理"
2. 系统显示AccountDialog对话框
3. 用户可以添加、编辑或删除账号
4. 账号信息保存到SQLite数据库

### 自动申购流程
1. 用户点击"开始自动申购"按钮
2. 系统从数据库加载账号列表
3. 对每个账号执行以下操作：
   - 打开同花顺APP
   - 登录账号
   - 导航到申购界面
   - 执行申购操作
   - 处理结果和异常情况
4. 操作日志实时显示在日志区域

## 自定义组件开发指南
- 新的UI组件应该放在`ui/`目录下
- 遵循现有对话框的命名和实现模式
- 使用Qt的布局管理器（如QVBoxLayout、QHBoxLayout）保证界面的响应式布局
- 确保所有用户输入都有适当的验证和错误处理

