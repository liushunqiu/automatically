---
description: 
globs: 
alwaysApply: false
---
# 项目结构指南

本项目是一个自动化交易系统，主要用于控制夜神模拟器执行申购流程。

## 主要入口点
- [main.py](mdc:main.py) - 主程序入口文件，负责创建和管理GUI界面
- [run.py](mdc:run.py) - 运行时启动脚本，检查环境依赖并启动主程序
- [automation.py](mdc:automation.py) - 自动化操作核心逻辑实现

## 配置文件
- [config.py](mdc:config.py) - 配置管理类，处理配置文件读写和参数管理
- [app_config.json](mdc:app_config.json) - 应用程序配置，包含模拟器路径、包名和坐标信息
- [simulator_config.txt](mdc:simulator_config.txt) - 模拟器配置参数

## 核心功能模块
- [emulator_improved.py](mdc:emulator_improved.py) - 改进版模拟器控制模块，处理模拟器的启动、连接和操作
- [simulator.py](mdc:simulator.py) - 模拟器控制器，封装了对`emulator_improved.py`的调用

## 项目目录结构
- `ui/` - 用户界面相关组件
  - [ui/account_dialog.py](mdc:ui/account_dialog.py) - 账号管理对话框
  - [ui/settings_dialog.py](mdc:ui/settings_dialog.py) - 系统设置对话框
- `workers/` - 工作线程实现
  - [workers/adb_worker.py](mdc:workers/adb_worker.py) - ADB操作的异步处理线程
- `entity/` - 数据实体模型
  - [entity/base_model.py](mdc:entity/base_model.py) - 基础模型类
  - [entity/user.py](mdc:entity/user.py) - 用户模型
  - [entity/user_subscription_record.py](mdc:entity/user_subscription_record.py) - 用户申购记录模型
- `utils/` - 工具函数集合

